version: '3.5'

services:
  api:
    build:
      context: ./back
      dockerfile: "Dockerfile.dev"
    restart: always
    environment:
      - DB_HOST=${DB_HOST:-arsfestdb}
      - DB_USER=${DB_USER:-arsfest}
      - DB_PW=${DB_PW:-arsfest}
      - DB_NAME=${DB_NAME:-arsfest}
      - PORT=${APP_PORT:-5000}
    container_name: arsfest-api
    depends_on:
      - db
    ports:
      - '5000:5000'
    networks:
      - db
      - api
    volumes:
      - type: bind
        source: ./back/src
        target: /opt/app/src

  ui:
    build:
      context: ./front
      dockerfile: "Dockerfile.dev"
    restart: always
    container_name: arsfest-ui
    depends_on:
      - db
      - api
    ports:
      - '8000:8000'
    networks:
      - api
    volumes:
      - type: bind
        source: ./front
        target: /opt/app

  db:
    container_name: arsfestdb
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-arsfest}
      - POSTGRES_PASSWORD=${DB_PW:-arsfest}      
      - POSTGRES_DB=${DB_NAME:-arsfest}
    networks:
      - db
    volumes:
      - /var/lib/postgresql/data/:/data/db

volumes:
  db-data:
    driver: local

networks:
  db:
    driver: bridge
  api:
    driver: bridge
